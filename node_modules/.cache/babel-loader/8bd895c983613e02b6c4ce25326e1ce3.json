{"ast":null,"code":"import { SET_PAGE_CONTENT, SET_BURGER_DETAIL, SET_PAGE_TOTAL } from '../utils/constants'; //import burgerBuns from '../json/burgerBuns.json';\n\nimport materials from '../json/materials.json';\nimport burgerBuns from '../json/burgerBuns.json';\nexport const setPageContent = (dispatch, burgerBuns) => {\n  dispatch({\n    type: SET_PAGE_CONTENT,\n    payload: burgerBuns\n  });\n};\nexport const setBurgerDetail = (dispatch, qty) => {\n  // const burgerBun = burgerBuns.find (\n  //     x => x.id === burgerBunId\n  // );\n  if (qty === 0 && burgerBuns.countInStock > 0) {\n    qty = 1;\n  }\n\n  dispatch({\n    type: SET_BURGER_DETAIL,\n    payload: qty\n  });\n};\nexport const setPageTotal = (dispatch, total) => {\n  total = 0;\n  dispatch({\n    type: SET_PAGE_TOTAL,\n    payload: total\n  });\n};\nexport const loginToFirebase = async (dispatch, userInfo) => {\n  dispatch({\n    type: BEGIN_LOGIN_REQUEST\n  });\n\n  try {\n    const user = await signInWithEmailPassword(userInfo.email, userInfo.password);\n    dispatch({\n      type: SUCCESS_LOGIN_REQUEST,\n      payload: user.user.providerData[0]\n    });\n    return user;\n  } catch (e) {\n    dispatch({\n      type: FAIL_LOGIN_REQUEST,\n      payload: e.message\n    });\n    console.log(e);\n    return null;\n  }\n};\nexport const registerToFirebase = async (dispatch, userInfo) => {\n  dispatch({\n    type: BEGIN_REGISTER_REQUEST\n  });\n\n  try {\n    const user = await registerWithEmailPassword(userInfo.email, userInfo.password, userInfo.name);\n    console.log(user);\n    dispatch({\n      type: SUCCESS_REGISTER_REQUEST,\n      payload: user.providerData[0]\n    });\n    return user;\n  } catch (e) {\n    dispatch({\n      type: FAIL_REGISTER_REQUEST,\n      payload: e.message\n    });\n    console.log(e);\n    return null;\n  }\n};","map":{"version":3,"sources":["/Users/jennyhuoh/Desktop/react-midterm/src/actions/index.js"],"names":["SET_PAGE_CONTENT","SET_BURGER_DETAIL","SET_PAGE_TOTAL","materials","burgerBuns","setPageContent","dispatch","type","payload","setBurgerDetail","qty","countInStock","setPageTotal","total","loginToFirebase","userInfo","BEGIN_LOGIN_REQUEST","user","signInWithEmailPassword","email","password","SUCCESS_LOGIN_REQUEST","providerData","e","FAIL_LOGIN_REQUEST","message","console","log","registerToFirebase","BEGIN_REGISTER_REQUEST","registerWithEmailPassword","name","SUCCESS_REGISTER_REQUEST","FAIL_REGISTER_REQUEST"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,iBAFJ,EAGIC,cAHJ,QAIO,oBAJP,C,CAMA;;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWF,UAAX,KAA0B;AACpDE,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEP,gBADD;AAELQ,IAAAA,OAAO,EAAEJ;AAFJ,GAAD,CAAR;AAIH,CALM;AAMP,OAAO,MAAMK,eAAe,GAAG,CAACH,QAAD,EAAWI,GAAX,KAAmB;AAC9C;AACA;AACA;AACA,MAAGA,GAAG,KAAK,CAAR,IAAaN,UAAU,CAACO,YAAX,GAA0B,CAA1C,EAA4C;AACxCD,IAAAA,GAAG,GAAG,CAAN;AACH;;AACDJ,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEN,iBADD;AAELO,IAAAA,OAAO,EAAEE;AAFJ,GAAD,CAAR;AAIH,CAXM;AAYP,OAAO,MAAME,YAAY,GAAG,CAACN,QAAD,EAAWO,KAAX,KAAqB;AAC7CA,EAAAA,KAAK,GAAG,CAAR;AACAP,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEL,cADD;AAELM,IAAAA,OAAO,EAAEK;AAFJ,GAAD,CAAR;AAIH,CANM;AAOP,OAAO,MAAMC,eAAe,GAAG,OAAOR,QAAP,EAAiBS,QAAjB,KAA8B;AACzDT,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAES;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMC,uBAAuB,CAACH,QAAQ,CAACI,KAAV,EAAiBJ,QAAQ,CAACK,QAA1B,CAA1C;AACAd,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEc,qBADC;AAEPb,MAAAA,OAAO,EAAES,IAAI,CAACA,IAAL,CAAUK,YAAV,CAAuB,CAAvB;AAFF,KAAD,CAAR;AAIA,WAAOL,IAAP;AACD,GAPD,CAOE,OAAOM,CAAP,EAAU;AACVjB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEiB,kBADC;AAEPhB,MAAAA,OAAO,EAAEe,CAAC,CAACE;AAFJ,KAAD,CAAR;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACA,WAAO,IAAP;AACD;AACF,CAjBI;AAoBL,OAAO,MAAMK,kBAAkB,GAAG,OAAOtB,QAAP,EAAiBS,QAAjB,KAA8B;AAC9DT,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEsB;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAMZ,IAAI,GAAG,MAAMa,yBAAyB,CAACf,QAAQ,CAACI,KAAV,EAAiBJ,QAAQ,CAACK,QAA1B,EAAoCL,QAAQ,CAACgB,IAA7C,CAA5C;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACAX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEyB,wBADC;AAEPxB,MAAAA,OAAO,EAAES,IAAI,CAACK,YAAL,CAAkB,CAAlB;AAFF,KAAD,CAAR;AAIA,WAAOL,IAAP;AACD,GARD,CAQE,OAAOM,CAAP,EAAU;AACVjB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE0B,qBADC;AAEPzB,MAAAA,OAAO,EAAEe,CAAC,CAACE;AAFJ,KAAD,CAAR;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACA,WAAO,IAAP;AACD;AACF,CAlBM","sourcesContent":["import {\n    SET_PAGE_CONTENT,\n    SET_BURGER_DETAIL,\n    SET_PAGE_TOTAL,\n} from '../utils/constants';\n\n//import burgerBuns from '../json/burgerBuns.json';\nimport materials from '../json/materials.json';\nimport burgerBuns from '../json/burgerBuns.json';\n\nexport const setPageContent = (dispatch, burgerBuns) => {\n    dispatch({\n        type: SET_PAGE_CONTENT,\n        payload: burgerBuns,\n    });\n}\nexport const setBurgerDetail = (dispatch, qty) => {\n    // const burgerBun = burgerBuns.find (\n    //     x => x.id === burgerBunId\n    // );\n    if(qty === 0 && burgerBuns.countInStock > 0){\n        qty = 1;\n    }\n    dispatch({\n        type: SET_BURGER_DETAIL,\n        payload: qty\n    })\n}\nexport const setPageTotal = (dispatch, total) => {\n    total = 0\n    dispatch({\n        type: SET_PAGE_TOTAL,\n        payload: total\n    })\n}\nexport const loginToFirebase = async (dispatch, userInfo) => {\n    dispatch({ type: BEGIN_LOGIN_REQUEST });\n    try {\n      const user = await signInWithEmailPassword(userInfo.email, userInfo.password);\n      dispatch({\n        type: SUCCESS_LOGIN_REQUEST,\n        payload: user.user.providerData[0],\n      })\n      return user;\n    } catch (e) {\n      dispatch({\n        type: FAIL_LOGIN_REQUEST,\n        payload: e.message\n      })\n      console.log(e)\n      return null;\n    }\n  }\n  \n  \n  export const registerToFirebase = async (dispatch, userInfo) => {\n    dispatch({ type: BEGIN_REGISTER_REQUEST });\n    try {\n      const user = await registerWithEmailPassword(userInfo.email, userInfo.password, userInfo.name);\n      console.log(user)\n      dispatch({\n        type: SUCCESS_REGISTER_REQUEST,\n        payload: user.providerData[0],\n      })\n      return user;\n    } catch (e) {\n      dispatch({\n        type: FAIL_REGISTER_REQUEST,\n        payload: e.message\n      })\n      console.log(e)\n      return null;\n    }\n  }"]},"metadata":{},"sourceType":"module"}