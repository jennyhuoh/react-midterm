{"ast":null,"code":"import burgerBuns from '../json/burgerBuns.json';\nimport ingredient from '../json/ingredient.json';\nimport meat from '../json/meat.json';\nimport materials from '../json/materials.json';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth'; //initialize firebase\n\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENTID\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nconst auth = firebase.auth();\nexport const getJSON = url => {\n  switch (url) {\n    case \"/burger\":\n      return materials;\n    // case \"/meat\":\n    //     return meat;\n    // case \"/ingredients\":\n    //     return ingredient;\n  }\n};\nexport const authenticateAnonymousely = () => {\n  return firebase.auth().signInAnonymously;\n};\nexport const signInWithEmailPassword = async (email, password) => {\n  return await auth.signInWithEmailAndPassword(email, password);\n};\nexport const registerWithEmailPassword = async (email, password, name) => {\n  await auth.createUserWithEmailAndPassword(email, password);\n  const user = auth.currentUser;\n  await user.updateProfile({\n    displayName: name\n  });\n  return user;\n};\nexport const signOut = () => {\n  auth.signOut();\n};","map":{"version":3,"sources":["/Users/jennyhuoh/Desktop/react-midterm/src/api/index.js"],"names":["burgerBuns","ingredient","meat","materials","firebase","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECTID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APPID","measurementId","REACT_APP_FIREBASE_MEASUREMENTID","initializeApp","auth","getJSON","url","authenticateAnonymousely","signInAnonymously","signInWithEmailPassword","email","password","signInWithEmailAndPassword","registerWithEmailPassword","name","createUserWithEmailAndPassword","user","currentUser","updateProfile","displayName","signOut"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP,C,CAEA;;AACA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADH;AAEjBC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFP;AAGjBC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,+BAHR;AAIjBC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,4BAJN;AAKjBC,EAAAA,aAAa,EAAET,OAAO,CAACC,GAAR,CAAYS,iCALV;AAMjBC,EAAAA,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW,sCANd;AAOjBC,EAAAA,KAAK,EAAEb,OAAO,CAACC,GAAR,CAAYa,wBAPF;AAQjBC,EAAAA,aAAa,EAAEf,OAAO,CAACC,GAAR,CAAYe;AARV,CAArB,C,CAUE;;AACAnB,QAAQ,CAACoB,aAAT,CAAuBnB,cAAvB;AAEA,MAAMoB,IAAI,GAAGrB,QAAQ,CAACqB,IAAT,EAAb;AACF,OAAO,MAAMC,OAAO,GAAIC,GAAD,IAAS;AAC5B,UAAQA,GAAR;AACI,SAAK,SAAL;AACI,aAAOxB,SAAP;AACJ;AACA;AACA;AACA;AANJ;AAQH,CATM;AAWP,OAAO,MAAMyB,wBAAwB,GAAG,MAAM;AACzC,SAAOxB,QAAQ,CAACqB,IAAT,GAAgBI,iBAAvB;AACH,CAFK;AAGN,OAAO,MAAMC,uBAAuB,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAC/D,SAAO,MAAMP,IAAI,CAACQ,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAb;AACD,CAFK;AAIN,OAAO,MAAME,yBAAyB,GAAG,OAAOH,KAAP,EAAcC,QAAd,EAAwBG,IAAxB,KAAiC;AACxE,QAAMV,IAAI,CAACW,8BAAL,CAAoCL,KAApC,EAA2CC,QAA3C,CAAN;AACA,QAAMK,IAAI,GAAGZ,IAAI,CAACa,WAAlB;AACA,QAAMD,IAAI,CAACE,aAAL,CAAmB;AACvBC,IAAAA,WAAW,EAAEL;AADU,GAAnB,CAAN;AAGA,SAAOE,IAAP;AACD,CAPM;AASP,OAAO,MAAMI,OAAO,GAAG,MAAM;AAC3BhB,EAAAA,IAAI,CAACgB,OAAL;AACD,CAFM","sourcesContent":["import burgerBuns from '../json/burgerBuns.json';\nimport ingredient from '../json/ingredient.json';\nimport meat from '../json/meat.json';\nimport materials from '../json/materials.json';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n//initialize firebase\nvar firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APPID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENTID\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  const auth = firebase.auth();\nexport const getJSON = (url) => {\n    switch (url) {\n        case \"/burger\":\n            return materials;\n        // case \"/meat\":\n        //     return meat;\n        // case \"/ingredients\":\n        //     return ingredient;\n    }\n}\n\nexport const authenticateAnonymousely = () => {\n     return firebase.auth().signInAnonymously;\n }\n export const signInWithEmailPassword = async (email, password) => {\n    return await auth.signInWithEmailAndPassword(email, password);\n  }\n  \n  export const registerWithEmailPassword = async (email, password, name) => {\n    await auth.createUserWithEmailAndPassword(email, password);\n    const user = auth.currentUser;\n    await user.updateProfile({\n      displayName: name,\n    })\n    return user;\n  }\n\n  export const signOut = () => {\n    auth.signOut();\n  }\n\n "]},"metadata":{},"sourceType":"module"}